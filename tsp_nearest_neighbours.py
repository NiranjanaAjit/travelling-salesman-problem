# -*- coding: utf-8 -*-
"""tsp-nearest_neighbours.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gY8p2P56kloRpTHK9z5cS7uSbnarkMO0
"""

pip install osmnx

pip install requests

import requests
import osmnx 

def findmin(mindist,node,l):
  for i,j in enumerate(l):
            if j==mindist[1]:
                if i not in path:
                    closestnode=i
                    return [closestnode,mindist[1]]
                else:
                    del mindist[0]
                    l[i]=-1
                    return findmin(mindist,node,l)
                    

def calc(node):
    if len(path)!=n:
        mindist=sorted(costmatrix[node])
        closestnode='unknown'
        l=costmatrix[node]
        a=findmin(mindist,node,l)
        path.append(a[0])
        dist.append(a[1]) 
        if len(path)!=n:   
          calc(a[0])

def dist(city1, city2):
    lat1 = city1[0]
    long1 = city1[1]
    lat2 = city2[0]
    long2 = city2[1]
    url = "http://router.project-osrm.org/route/v1/driving/{},{};{},{}?overview=false".format(long1, lat1, long2, lat2)
    result = requests.get(url).json()
    distance = result["routes"][0]["distance"]
    return distance/1000 

def get_coords(place):
    coords=osmnx.geocode(place)
    return coords


costmatrix=[]
n=int(input('enter the number of locations (including starting point): '))
locations=[]
for i in range(n):
    locations.append(input('enter location: '))

names=locations.copy()
for i in locations:
    l=get_coords(i)
    locations[locations.index(i)]=l
for i,j in enumerate(locations):
    a=[]
    for p,q in enumerate(locations):
        # costmatrix[i][m]=dist(n,j)
        a.append(dist(q,j))
    costmatrix.append(a)
# print('costmatrix is : ',costmatrix)

print('LOCATIONS: ')
for _ in range(len(names)):
  print(_," . ",names[_])
x=int(input('choose a starting point: '))

path=[x]
dist=[]
calc(x)
dist.append(costmatrix[path[-1]][x])
path.append(x)



print('shortest path is:  ')
for _ in path:
  print(' -> ',names[_],end='')
print('\ncost: ',sum(dist))